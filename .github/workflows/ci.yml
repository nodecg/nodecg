name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-test:
    strategy:
      matrix:
        node-version: [12.x, 14.x]
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.node-version}}

      - name: Install dependencies
        run: npm ci

      - name: Check if build result is different from current branch
        run: |
          npm run build
          git diff --name-only --exit-code

      - name: Test
        run: |
          git config --global user.email "contact@nodecg.dev"
          git config --global user.name "NodeCG Bot"
          npm t

      - run: npx nyc report --reporter=text-lcov > coverage.lcov

      - name: Report code coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.lcov

  release:
    runs-on: ubuntu-latest

    needs: build-test

    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Release to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Prepare github release
        run: |
          echo ::set-env name=TAG_NAME::${GITHUB_REF#refs/tags/}
          mv $(npm pack 2>/dev/null) "nodecg-${TAG_NAME}.tgz"

      - name: Create github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Stable Release ${{ env.TAG_NAME }}

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          assets_path: ./nodecg-${{ env.TAG_NAME }}.tgz
