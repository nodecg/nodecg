mixin panels(bundle)
    each panel in bundle.dashboard.panels
        div(class='#{ bundle.name } #{ panel.name } panel panel-default panel-span-#{ panel.width }')
            .panel-heading
                h3.panel-title=panel.title
                i(class="fa panel-icon #{ panel.faIcon }")
                +panelInfoBtn(panel)
            //- The body was rendered from Jade into HTML in an earlier step of bundle parsing
            //- This is inefficient, as it means we are doing two rendering passes for each bundle:
            //- Once to render the body, once to render the rest of the panel (container + header).
            //- However, I see no other way to do it as Jade is a compiled language and does not
            //- support dynamic includes.
            .panel-body!=panel.body

//- TODO: Make panel info better. Show things like resolution, authors, etc. Lots more info
mixin panelInfoBtn(panel)
    button.btn.btn-xs.btn-info.panel-info(type="button",
    data-toggle="popover",
    title=panel.title,
    data-html="true",
    data-container="body"
    data-placement="bottom",
    data-content="<a target='_blank' href='#{ panel.viewUrl }'>#{ panel.viewUrl }</a>")
        i.fa.fa-info

doctype html
html(lang="en")
    head
        meta(http-equiv="X-UA-Compatible", content="IE=edge; charset=UTF-8")
        meta(name="viewport", content="width=device-width", initial-scale=1)

        title NodeCG dashboard

        //- Bootstrap main CSS & Yeti override
        link(rel='stylesheet', href='/components/bootstrap/dist/css/bootstrap.min.css')
        link(rel='stylesheet', href='/components/bsw-yeti/css/bootstrap.min.css')

        //- Bower component CSS
        link(rel='stylesheet', href='/components/fontawesome/css/font-awesome.min.css')
        link(rel='stylesheet', href='/components/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css')
        link(rel='stylesheet', href='/components/bootstrap-tagsinput/dist/bootstrap-tagsinput.css')
        link(rel='stylesheet', href='/components/seiyria-bootstrap-slider/dist/css/bootstrap-slider.min.css')

        //- Custom styles for this template
        link(rel='stylesheet', href='/dashboard/dashboard.css')

        //- Bundle CSS, perhaps these can just be linked to directly?
            The javascript needs to be cached because of the way we're injecting, but we're not doing
            anything special to the CSS, at least not yet.
        each bundle in bundles
            //- only add the tag if there is a style, empty tags can cause long timeout delays
            if bundle.dashboard.css
                each style in bundle.dashboard.css
                    style(type='text/css').
                        !{ style }

        //- Make the NodeCG config available to all code
        script(type='text/javascript').
            window.ncgConfig = !{ JSON.stringify(ncgConfig) };

    body
        div(class='navbar navbar-inverse navbar-fixed-top', role='navigation')
            div.container
                div.navbar-header
                    a(class='navbar-brand', href='#') NodeCG dashboard
                if ncgConfig.login.enabled
                    .collapse.navbar-collapse
                        ul.nav.navbar-nav.navbar-right
                            li
                                a(href="/logout" title="Sign out")
                                    i.fa.fa-sign-out

        //- Alert container element for socket disconnects/errors/reconnects
        .container
            #socketStatus

        //- Spacer
        p

        //- Bundle panels
        div.container
            div.dashboard-panels
                each bundle in bundles
                    +panels(bundle)

        //- Core JavaScript
        script(src='/components/jquery/dist/jquery.min.js')
        script(src='/components/bootstrap/dist/js/bootstrap.min.js')
        script(src='/components/bootstrap/js/tooltip.js')
        script(src='/components/bootstrap/js/popover.js')
        script(src='/components/masonry/dist/masonry.pkgd.min.js')
        script(src='/components/imagesloaded/imagesloaded.pkgd.min.js')
        script(src='/components/moment/min/moment.min.js')
        script(src='/components/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js')
        script(src='/components/bootstrap-tagsinput/dist/bootstrap-tagsinput.min.js')
        script(src='/components/seiyria-bootstrap-slider/dist/bootstrap-slider.min.js')
        script(src='/components/typeahead.js/dist/typeahead.jquery.min.js')

        //- Firefox doesn't support native WebCrypto yet >:(
        script(src='/components/cryptojslib/components/core-min.js')
        script(src='/components/cryptojslib/components/sha256-min.js')
        script(src='/components/cryptojslib/components/enc-base64-min.js')
        script(src='/components/obs-remote/dist/obs-remote.min.js')

        //- Twitch JS SDK isn't on bower ¯\_(ツ)_/¯
        script(src='/dashboard/twitch.min.js')

        //- Load socket.io and immediately create a socket that all dashboard code will use
        script(src='/socket.io/socket.io.js')
        script(type='text/javascript').
            window.socket = io.connect('http://#{ ncgConfig.host }:#{ ncgConfig.port }/');
        script(src='/nodecg-api.js')

        script(src='/dashboard/dashboard.js')

        //- Bundle javascript
        each bundle in bundles
            //- only add the tag if there is a script, empty tags can cause long timeout delays
            if bundle.dashboard.js
                each script in bundle.dashboard.js
                    script(type='text/javascript').
                        try {
                            (function (nodecg) {
                                var $bundle = $('.dashboard-panels .#{ bundle.name }');
                                !{ script }
                            })(new NodeCG('#{ bundle.name }', !{JSON.stringify(bundle.config)}, !{JSON.stringify(ncgConfig)}, window.socket));
                        } catch (err) {
                            console.error("[NODECG] Panel for bundle #{ bundle.name } threw error:", err.stack);
                        }
