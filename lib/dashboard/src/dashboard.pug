doctype html
html(lang='en')
	head
		meta(http-equiv='X-UA-Compatible', content='IE=edge; charset=UTF-8')
		meta(name='viewport', content='width=device-width', initial-scale=1)
		meta(name='theme-color' content='#ffffff')
		link(rel='manifest', href='/manifest.json')

		title NodeCG Dashboard

		//- Register service worker
		script(type='text/javascript').
			if ('serviceWorker' in navigator) {
				navigator.serviceWorker.register('/service-worker.js')
					.then(function (registration) {
						// Service worker successfully installed.
					}).catch(function (err) {
						console.error('Error installing service worker!');
						console.error(err);
					});
			}

		if privateConfig.rollbar && privateConfig.rollbar.enabled
			script(src='/bower_components/rollbar/dist/rollbar.min.js')
			script(type='text/javascript').
				const _rollbarConfig = {
					accessToken: '#{privateConfig.rollbar.postClientItem}',
					captureUncaught: true,
					payload: {
						environment: '#{privateConfig.rollbar.environment}'
					}
				};
				Rollbar.init(_rollbarConfig);

		//- other dashboard scripts
		script(src='/bower_components/draggabilly/dist/draggabilly.pkgd.min.js' async)
		script(src='/bower_components/iframe-resizer/js/iframeResizer.min.js' async)
		script(src='/bower_components/imagesloaded/imagesloaded.pkgd.min.js' async)
		script(src='/bower_components/packery/dist/packery.pkgd.min.js' async)
		script(src='/bower_components/clipboard/dist/clipboard.min.js')

		script(type='text/javascript').
			// Make the global config (and other render-time data) available during runtime.
			window.ncgConfig = !{JSON.stringify(publicConfig)};
			window.__renderData__ = {
				bundles: !{JSON.stringify(bundles)},
				workspaces: !{JSON.stringify(workspaces)}
			};
			Object.freeze(window.__renderData__);

			// Setup Polymer options
			window.Polymer = {
				// Cannot use shadow DOM due to: https://github.com/davidjbradshaw/iframe-resizer/issues/454
				lazyRegister: true,
			};

			// Load webcomponentsjs polyfill if browser does not support native
			// Web Components
			(function () {
				'use strict';
				var onload = function () {
					// For native Imports, manually fire WebComponentsReady so user code
					// can use the same code path for native and polyfill'd imports.
					if (!window.HTMLImports) {
						document.dispatchEvent(
							new CustomEvent('WebComponentsReady', {bubbles: true})
						);
					}
				};
				var webComponentsSupported = (
					'registerElement' in document
					&& 'import' in document.createElement('link')
					&& 'content' in document.createElement('template')
				);
				if (webComponentsSupported) {
					onload();
				} else {
					var script = document.createElement('script');
					script.async = true;
					script.src = '/bower_components/webcomponentsjs/webcomponents-lite.min.js';
					script.onload = onload;
					document.head.appendChild(script);
				}
			})();

		//- dashboard CSS
		link(rel='import', href='/dashboard/style/nodecg-styles.html', async)

		//- our custom dashboard elements
		link(rel='import', href='/dashboard/elements/ncg-dashboard.html')

		//- make the API available
		script(src='/nodecg-api.js')

		//- initialize the socket
		script(src='/bower_components/cookies-js/dist/cookies.min.js')
		script(src='/socket.io/socket.io.js')
		script(type='text/javascript').
			const params = new URLSearchParams(location.search);
			window.token = params.key || Cookies.get('socketToken');
			if (window.token) {
				window.socket = io(undefined, {query: 'token=' + window.token});
			} else {
				window.socket = io();
			}

		//- Set the default color of many polymer elements.
			Newer elements use --primary-color, older elements use --default-primary-color.
		style(is='custom-style').
			:root {
				--default-primary-color: #00bebe;
				--primary-color: #00bebe;
			}

			body {
				background-color: #dedede;
				@apply(--layout-vertical);
				@apply(--layout-fullbleed);
			}

		style.
			.text-warning {
				color: #c53929;
			}

			.ncg-card {
				width: 100%;
				max-width: 600px;
				margin-bottom: 12px;
			}

			ncg-dashboard-panel iframe {
				vertical-align: middle;
			}

	body
		ncg-dashboard
